关系运算符：
    >、>=、<、<=
    - 如果比较两个字符串的大小关系，它不会将字符串转换为数值去比较
        而是逐位的比较字符的Unicode编码，所以利用这个特性可以通过比较字符串大小
        来将字符串按照字母顺序排序。

相等和全等
    - 相等运算符
        ==（相等）
            - 检查两个值是否相等，相等返回true，否则返回false
                它会做自动的类型转换，如果两个值的类型不同它会将其转换为相同的类型
                然后再比较（通常是转换为数字进行比较）

        !=（不等）
            - 检查两个值是否不相等，不相等返回true，否则返回false
            - 会做自动的类型转换

    - 全等（*****）
        ===（全等）
            - 检查两个值是否全等，不会做自动的类型转换
        !==（不全等）
            - 检查两个值是否不全等，不会做自动的类型转换

条件运算符（三元运算符、三目运算符）:
    - 语法：
        条件表达式 ? 语句1 : 语句2

    - 执行流程：
        条件运算符在执行时，先对条件表达式进行求值判断，
            如果为true，则执行语句1.
            如果为false，则执行语句2.

代码块
    - 在JS中使用{}来表示代码块，代码块用来为代码分组
        同一个代码块中的代码要么都执行要么都不执行
    - 使用var声明的变量，没有块作用域
    - 使用let声明的变量，具有块作用域，
        let声明的变量，只能在块内部访问
        无法在块外访问

流程控制语句：
    if语句
        - if语句
            if(条件表达式){
                语句...
            }

        - if-else语句
            if(条件表达式){
                语句...
            }else{
                语句...
            }

        - if - else if - else
            if(条件表达式){
                语句...
            }else if(条件表达式){
              语句...
            }else if(条件表达式){
                语句...
            }else{
                语句...
            }

        - 执行流程：
            if语句在执行时，自上向下对条件表达式进行求值判断，
                如果结果为true，则执行if后的语句，执行完毕语句结束
                如果结果为false，则继续向下判断，直到找到true为止
                如果所有的都是false，则执行else后的语句

    switch语句
        - 语法：
            switch(条件表达式){
                case 表达式:
                    语句..
                    break;
                case 表达式:
                    语句...
                    break;
                default:
                    语句...
                    break;
            }

        - 执行流程：
            switch语句在执行时，会自上向下将switch后的条件表达式
                和case后的表达式做全等比较，
                结果为true，自当前case处开始执行代码
                结果false，则继续向下判断，直到找到true为止
                所有都是false，则自default处开始执行代码

循环语句：
    - 循环语句可以使指定的代码反复执行多次

    while循环
        - 语法：
            while(条件表达式){
                语句...
            }

        - 执行流程：
            while循环在执行时，会先对条件表达式进行求值判断，
                如果结果为false，则循环结束
                如果结果为true，则执行循环体，
                执行完毕继续对条件表达式进行求值判断，以此类推。



