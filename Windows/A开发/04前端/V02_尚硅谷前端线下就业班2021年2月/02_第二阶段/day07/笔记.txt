- 作用域（scope）
    - 函数作用域
        - 函数作用域在函数调用时创建，调用结束即销毁
        - 函数每次调用都会产生一个新的作用域，作用域与作用域间相互独立
        - 在函数作用域声明的变量是局部变量，声明函数是局部函数，
            只能在函数内部访问，函数外部无法访问
        - 如果声明变量不使用var或let，则变量会成为全局变量
        - 变量和函数的提升在函数作用域中同样适用
            函数作用域就是小全局作用域，全局作用域就是一个小的函数作用域

    - 作用域链
        - 当我们访问一个变量或函数时，
            JS会先在当前作用域中寻找，如果有则直接使用，
            如果没有则去它的上一层作用域中寻找，有则使用，
            没有则继续去上一层寻找，以此类推。
            直到找到全局作用域，依然没有找到，则报错。

        - 函数外层作用域在函数定义时就已经确定，和函数的调用位置无关。

- this
    - this是函数中的隐含参数，由浏览器自动传递
    - 根据函数的调用方式不同，this的值也不同：
        ① 以函数的形式调用，this是window
        ② 以方法的形式调用，this是调用方法的对象
        ③ 以构造函数的形式调用，this是新建的对象

- 构造函数（constructor）
    - 构造函数就是专门用来创建对象的函数
    - 构造函数的定义方式和普通函数没有区别，只是构造函数的名字首字母需要大写
    - 构造函数和普通函数主要区别在于调用方式：
        普通函数是直接调用
        构造函数需要使用new关键字来调用
    - 构造函数的执行的流程：
        ① 构造函数执行时，会先创建一个新的对象
        ② 将this设置为新的对象
        ③ 执行函数中的代码
        ④ 将新建的对象作为返回值返回
    - 一个构造函数也称为一个类（class），
        通过构造函数所创建的对象，我们称其为该类实例
        通过同一个类创建的对象，称为同类对象
    - 运算符：instanceof
        - 作用：检查一个对象是否是一个类的实例：
        - 语法：对象 instanceof 类


