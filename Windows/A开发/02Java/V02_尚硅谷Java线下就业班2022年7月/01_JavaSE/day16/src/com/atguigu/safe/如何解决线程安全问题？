1、使用同步机制
同步就是给某段代码加“锁”。
锁是一个对象，又被称为监视器对象。就是监视使用共享数据的这几个线程的调度执行情况。
Java对象分为3个部分：
（1）对象头：
A：包含当前对象所属类的指针
B：Mark Word：记录了和当前对象有关的GC、锁标记等信息
C：数组的长度，数组对象特有的
（2）对象的实例变量
（3）对齐空白

即每一个对象都有一个标记位，标记现在哪个线程“占有”这个锁对象。
这个标记为会记录这个线程的ID。只有“占有”锁对象的线程才有机会执行被锁的代码，称为同步代码。

2、如何给代码加锁？synchronized
（1）同步方法：锁整个方法
【修饰符】 synchronized 返回值类型 方法名(【形参列表】)【throws 异常列表】{
        方法体
}
（2）同步代码块：锁方法体里面的一小部分代码。
synchronized(锁对象){
    需要被锁起来的代码
}

3、什么时候释放锁？
（1）当synchronized锁的代码全部执行完，才会释放锁。

4、锁对象的选择问题？
（1）任意类型的对象都可以当做监视线程的锁对象。即类型不限制。
（2）必须保证使用共享数据的多个线程（具有竞争关系的多个线程）使用
同一个锁对象。
（3）同步方法的锁对象是不能自由选择的，是默认的。
非静态方法的锁对象是this对象
静态方法的锁对象是当前类的Class对象。 只要是同一个类，那么Class就一定是同一个。