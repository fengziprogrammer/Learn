/*
数组有几个特点：
（1）数组的长度一旦确定就不能修改。
（2）数组的元素是“连续”存储的，即数组是需要在内存中开辟一整块连续的存储空间。
（3）数组元素的访问速度是非常快

JVM的运行时分为几个部分：
1、方法区：存储加载的类信息，常量、静态变量等
2、堆：存储程序员通过new（创建对象）申请的内存
3、Java虚拟机栈：存储方法体中的局部变量等信息
4、本地方法栈：存储调用的本地方法（C的函数库）的局部变量等信息
5、程序计数器：存储每一个线程下一条要执行的指令

今天我们主要分析的是：
堆和Java的虚拟机栈


变量：
基本数据类型的变量：存数据值
引用数据类型的变量：存地址值


结论：
（1）数组的元素是存储在堆中
（2）数组的元素是连续存储的
（3）数组名是记录数组对象的首地址
（4）下标从[0]开始，表示第一个元素不用跨过任何元素，从首地址直接取元素的值。
 */
public class Test05ArrayMemory {

    public static void main(String[] args) {
        int[] arr = new int[3];
        System.out.println(arr);//[I@1b6d3586
        System.out.println(arr.hashCode());
        //十进制460141958->十六进制1B6D3586
        System.out.println(arr.toString());//Java中自动打印一个对象，会自动调用它的toString
        /*
        arr 是数组名，同时也是变量，是一个引用数据类型的变量。它里面存储的是地址值。
        虽然arr中存储的是数组对象的首地址，但是 “[I@1b6d3586”和首地址不能划“=”。
        Java是不会对外暴露内存地址的。

        [I@1b6d3586：[表示一维数组，I表示元素是int类型，@后面的1b6d3586是数组对象的hashCode值的十六进制值。
        hashCode。就是一个数字，有点像“身份证号”，只有当对象存储到 哈希表等哈希结构的容器中才会有用。
         */


    }

}
