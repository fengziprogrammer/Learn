
========================== day06回顾 ==========================

    帮助文档的使用
        1.打开帮助文档(字典)
        2.索引的位置,输入类名,敲回车
        3.入门案例(demo)
        4.查看(包,继承体系,构造方法(创建对象),成员方法(具有哪一些功能))

    包和导包
        1.包: 使用package声明
        2.导包: 使用import导包
        结论: IDEA可以自动导包

    Scanner
        1.导包 import java.util.Scanner;
        2.创建对象 Scanner sc = new Scanner(System.in); //带参构造
        3.调用方法 double number = sc.nextDouble; //接收小数

    Random
        1.导包 import java.util.Scanner;
        2.创建对象 Random r = new Random(); //空参构造
        3.调用方法 int number = r.nextInt(10); //指定范围 从0开始到指定值, 包含0不包含指定值

    组件的分类
        1.容器组件
            JFrame 窗体
            JPanel 小窗体,可以嵌套在JFrame中
        2.基本组件
            

    GUI案例(静态版) -> 完成5个案例

========================== day07重点 ==========================
    String
        创建对象
            1. String s1 = "abc"; //双引号创建的字符串对象,是一个常量,在字符串常量池中存储
            2. String s2 = new String(); //空参构造,new出来的都在堆内存
            3. String s3 = new String("字符串"); //带参构造,new出来的都在堆内存
        常用方法
            1. 返回字符串长度 int length();
            2. 比较字符串内容 boolean equals("字符串");
            3. 比较字符串内容,但是忽略大小写 boolean equalsIgnoreCase("字符串");
            4. 去除首尾的空格 String trim();
        用户登录案例最终版 -> 对应代码完成
        聊天室案例最终版 -> 对应代码完成

    Integer
        创建对象
            1.过时的构造方法
                Integer i = new Integer(100);
                Integer i = new Integer("100"); //字符串内容必须是纯数字
            2.推荐的静态方法
                Integer i = Integer.valueOf(200); //静态方法可以通过类名调用的方法
                Integer i = Integer.valueOf("200");
        常用方法 -> String转int方法 -> 转谁调谁的方法!!! -> 调用Integer的方法
            int num = Integer.parseInt("80");
        猜数字小游戏最终版 -> 对应代码完成

    Date
        创建对象
        常用方法
    SimpleDateFormat
        创建对象
        常用方法
        手机日期时间显示最终版
        考勤查询最终版

    知道继承的好处
        提高了代码的复用性 -> 案例说明

    使用继承改进窗体案例(登录案例的静态版)
        继承案例: 使用第一次写的用户登录完成改进优化
            1.创建MyJFrame类,继承JFrame类,JFrame类中的方法我们就可以直接使用了
            2.提供空参构造,方法体中,完成了如下功能
                2.1 完成窗体的初始化 -> 抽取成方法initJFrame();
                2.2 完成基本组件绘制 -> 抽取成方法paintView();
            3.在测试类中,只需要通过空参,创建MyJFrame类对象 -> 完成窗体展示



















